---
openapi: 3.0.1
info:
  title: youtube Management API
  description: This API exposes endpoints to manage tutorials.
  termsOfService: https://www.bezkoder.com/terms
  contact:
    name: YOUTUBE CODERS
    url: "https://t.me/+QFSu2h6bo3RiNjEy \U0001F310"
    email: www.youtube.uz
  version: '1.0'
servers:
  - url: http://localhost:8080
    description: "SERVER URL \U0001F310\U0001F4C3ℹ️\U0001F50D\U0001F642"
security:
  - Bearer Authentication: []
tags:
  - name: Profile ⚙
    description: Profile api list.
  - name: 'PLAYLIST-VIDEO CONTROLLER #️⃣'
    description: this api used for playlist-video
  - name: "VIDEO LIKE CONTROLLER \U0001F44D\U0001F3FB\U0001F44E\U0001F3FB"
    description: this api used for video liking
  - name: "VIDEO CONTROLLER \U0001F3A5"
    description: this api used for video
  - name: 'REPORT CONTROLLER #️⃣'
    description: this api used for report
  - name: "COMMENT \U0001F4AC"
    description: this api used for CRUD and get methods!
paths:
  "/api/v1/video/close/update-status/{id}":
    put:
      tags:
        - "VIDEO CONTROLLER \U0001F3A5"
      summary: update video status ⭐
      description: this api used for video update status
      operationId: updateStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/video/close/update-details/{id}":
    put:
      tags:
        - "VIDEO CONTROLLER \U0001F3A5"
      summary: "update video \U0001FA84\U0001F6E0️"
      description: this api used for video update details
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/VideoDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/video/close/increase-view-count/{id}":
    put:
      tags:
        - "VIDEO CONTROLLER \U0001F3A5"
      summary: increase video view count ➕➕
      description: this api used for video view count increase
      operationId: increaseViewCount
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/tag/{id}":
    put:
      tags:
        - tag-controller
      operationId: put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TagDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    delete:
      tags:
        - tag-controller
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/subscription/update/status/{id}":
    put:
      tags:
        - subscription-controller
      operationId: changeStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: query
          required: true
          schema:
            type: string
            enum:
              - ACTIVE
              - BLOCK
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/subscription/update/notification/{id}":
    put:
      tags:
        - subscription-controller
      operationId: changeNotification
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum:
              - ALL
              - PERSONALIZED
              - NON
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/profile/user/update/password":
    put:
      tags:
        - Profile ⚙
      summary: Change password
      description: This api used for change password.
      operationId: changePassword
      parameters:
        - name: newPassword
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/profile/user/update/email":
    put:
      tags:
        - Profile ⚙
      summary: Update email
      description: This api used for update email.
      operationId: updateEmail
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/profile/user/update/detail/{profileId}":
    put:
      tags:
        - Profile ⚙
      summary: Update profile
      description: This api used for update profile.
      operationId: updateDetail
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProfileDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/profile/user/update-photo/{profileId}":
    put:
      tags:
        - Profile ⚙
      summary: Update attach
      description: This api used for update profile attach.
      operationId: updateAttach
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AttachDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/playlist/{id}":
    put:
      tags:
        - playlist-controller
      operationId: put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlaylistDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    delete:
      tags:
        - playlist-controller
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/playlist/status/{id}":
    put:
      tags:
        - playlist-controller
      operationId: changeStatus_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlaylistDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/playlist-video/close/update/{id}":
    put:
      tags:
        - 'PLAYLIST-VIDEO CONTROLLER #️⃣'
      summary: "update playlist-video ⬆️\U0001F3A5"
      description: this api used for playlist-video update
      operationId: update_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: lang
          in: query
          required: false
          schema:
            type: string
            default: en
            enum:
              - en
              - ru
              - uz
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlaylistVideoDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/comment/close/update/{id}":
    put:
      tags:
        - "COMMENT \U0001F4AC"
      operationId: update_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: content
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/channel/update/{id}":
    put:
      tags:
        - channel-controller
      operationId: update_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ChannelDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/channel/update/status/{id}":
    put:
      tags:
        - channel-controller
      operationId: statusUp
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ChannelDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/channel/update/photo/{id}":
    put:
      tags:
        - channel-controller
      operationId: photoUp
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ChannelDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/channel/update/banner/{id}":
    put:
      tags:
        - channel-controller
      operationId: bannerUp
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ChannelDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/category/{id}":
    put:
      tags:
        - category-controller
      operationId: put_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CategoryDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    delete:
      tags:
        - category-controller
      operationId: delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/close/like/{videoId}":
    post:
      tags:
        - "VIDEO LIKE CONTROLLER \U0001F44D\U0001F3FB\U0001F44E\U0001F3FB"
      summary: "create or remove like \U0001F44D\U0001F3FB"
      description: this api used for create or remove like
      operationId: like
      parameters:
        - name: videoId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/close/dislike/{videoId}":
    post:
      tags:
        - "VIDEO LIKE CONTROLLER \U0001F44D\U0001F3FB\U0001F44E\U0001F3FB"
      summary: "create or remove dislike \U0001F44E\U0001F3FB"
      description: this api used for create or remove dislike
      operationId: dislike
      parameters:
        - name: videoId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/video/close/create":
    post:
      tags:
        - "VIDEO CONTROLLER \U0001F3A5"
      summary: create video ➕
      description: this api used for video creation
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/VideoDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/tag":
    post:
      tags:
        - tag-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TagDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/subscription/create":
    post:
      tags:
        - subscription-controller
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SubscriptionDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/report/close/ceate":
    post:
      tags:
        - 'REPORT CONTROLLER #️⃣'
      summary: create report ➕
      description: this api used for report creation
      operationId: create_3
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ReportDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/profile/admin/create":
    post:
      tags:
        - Profile ⚙
      summary: Create profile
      description: This api used for create profile.
      operationId: create_4
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProfileDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/playlist":
    post:
      tags:
        - playlist-controller
      operationId: create_5
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlaylistDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/playlist-video/close/create":
    post:
      tags:
        - 'PLAYLIST-VIDEO CONTROLLER #️⃣'
      summary: "create playlist-video ➕\U0001F3A5"
      description: this api used for playlist-video creation
      operationId: create_6
      parameters:
        - name: lang
          in: query
          required: false
          schema:
            type: string
            default: en
            enum:
              - en
              - ru
              - uz
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlaylistVideoDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/emailHistory/filter":
    post:
      tags:
        - email-history-controller
      operationId: filter
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmailHistoryFilterDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageImplEmailHistoryDTO"
  "/api/v1/comment/close/create":
    post:
      tags:
        - "COMMENT \U0001F4AC"
      summary: "create new comment \U0001F4AC"
      description: this api used for creating new comment!
      operationId: create_7
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CommentDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/channel/create":
    post:
      tags:
        - channel-controller
      operationId: create_8
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ChannelDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/category":
    post:
      tags:
        - category-controller
      operationId: create_9
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CategoryDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/auth/registration":
    post:
      tags:
        - auth-controller
      operationId: registration
      parameters:
        - name: lang
          in: query
          required: false
          schema:
            type: string
            default: en
            enum:
              - en
              - ru
              - uz
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegistrationDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/auth/login":
    post:
      tags:
        - auth-controller
      operationId: login
      parameters:
        - name: lang
          in: query
          required: false
          schema:
            type: string
            default: en
            enum:
              - en
              - ru
              - uz
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AuthDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/attach/upload":
    post:
      tags:
        - attach-controller
      operationId: upload
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/AttachDTO"
  "/api/v1/video/open/paging/video-short-info":
    get:
      tags:
        - "VIDEO CONTROLLER \U0001F3A5"
      summary: "paging video short info \U0001F4C3ℹ️"
      description: this api used for paging all video with short info
      operationId: pagingVideoShortInfo
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageVideoShortInfoMapper"
  "/api/v1/video/open/paging/video-playlist-info":
    get:
      tags:
        - "VIDEO CONTROLLER \U0001F3A5"
      summary: "paging video playlist info \U0001F4C3ℹ️"
      description: this api used for paging all video with playlist info
      operationId: pagingVideoPlaylistInfo
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageVideoPlayListInfoMapper"
  "/api/v1/video/open/paging/video-full-info":
    get:
      tags:
        - "VIDEO CONTROLLER \U0001F3A5"
      summary: "paging video full info \U0001F4C3ℹ️"
      description: this api used for paging all video with full info
      operationId: pagingVideoFullInfo
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageVideoFullInfoMapper"
  "/api/v1/video/close/paging/search-by-title/{title}":
    get:
      tags:
        - "VIDEO CONTROLLER \U0001F3A5"
      summary: "paging video by title \U0001F4C3 "
      description: this api used for paging video by title
      operationId: searchVideoByTitle
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageVideoDTO"
  "/api/v1/video/close/paging/search-by-id/{id}":
    get:
      tags:
        - "VIDEO CONTROLLER \U0001F3A5"
      summary: "search video by id \U0001F50D "
      description: this api used for search video by id
      operationId: searchVideoById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/video/close/paging/by-created-date/descending":
    get:
      tags:
        - "VIDEO CONTROLLER \U0001F3A5"
      summary: "paging video by created-date \U0001F50D "
      description: this api used for paging video by created-date
      operationId: pagingByCreatedDateDescending
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageVideoDTO"
  "/api/v1/video/close/paging-by-tag/{id}":
    get:
      tags:
        - "VIDEO CONTROLLER \U0001F3A5"
      summary: "paging video by tag \U0001F4C3 "
      description: this api used for paging video by tag
      operationId: pagingByTagId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageVideoDTO"
  "/api/v1/video/close/paging-by-category/{id}":
    get:
      tags:
        - "VIDEO CONTROLLER \U0001F3A5"
      summary: "paging video \U0001F4C3"
      description: this api used for paging video
      operationId: pagingByCategoryId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageVideoDTO"
  "/api/v1/tag/all":
    get:
      tags:
        - tag-controller
      operationId: all
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TagDTO"
  "/api/v1/subscription/get/all":
    get:
      tags:
        - subscription-controller
      operationId: getAll
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/report/close/paging":
    get:
      tags:
        - 'REPORT CONTROLLER #️⃣'
      summary: "paging reports \U0001F4C4#️⃣"
      description: this api used for paging reports
      operationId: paging
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageReportDTO"
  "/api/v1/report/close/list-by-profile/{id}":
    get:
      tags:
        - 'REPORT CONTROLLER #️⃣'
      summary: "get list reports \U0001F4C4#️⃣"
      description: this api used for get list reports
      operationId: getListById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ReportDTO"
  "/api/v1/profile/user/get/detail":
    get:
      tags:
        - Profile ⚙
      summary: Get details
      description: This api used for get profile details.
      operationId: getDetail
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/playlist/pagination":
    get:
      tags:
        - playlist-controller
      operationId: pagination
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/playlist-video/open/get/video-list-by-playlist/{id}":
    get:
      tags:
        - 'PLAYLIST-VIDEO CONTROLLER #️⃣'
      summary: "delete playlist by id\U0001F194\U0001F3A5"
      description: this api used for delete playlist by id
      operationId: getVideoListByPlaylistId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: lang
          in: query
          required: false
          schema:
            type: string
            default: en
            enum:
              - en
              - ru
              - uz
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PlaylistVideoInfoMapper"
  "/api/v1/emailHistory/pagination":
    get:
      tags:
        - email-history-controller
      operationId: pagination_1
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/emailHistory/paginationByEmail":
    get:
      tags:
        - email-history-controller
      operationId: paginationByPrice
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/comment/close/paging":
    get:
      tags:
        - "COMMENT \U0001F4AC"
      summary: "paging comment \U0001F4AD"
      description: this api used for paging comment!
      operationId: paging_1
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageCommentDTO"
  "/api/v1/comment/close/paging/by-video-title/{title}":
    get:
      tags:
        - "COMMENT \U0001F4AC"
      summary: "paging comment list by video title \U0001F524"
      description: this api used for paging comment list by video title!
      operationId: findAllByVideoTitle
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageCommentDTO"
  "/api/v1/comment/close/paging/by-video-id/{id}":
    get:
      tags:
        - "COMMENT \U0001F4AC"
      summary: "paging comment list by video id\U0001F3A5\U0001F194"
      description: this api used for paging comment list by video id!
      operationId: pagingByVideoId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageCommentDTO"
  "/api/v1/comment/close/paging/by-user/{id}":
    get:
      tags:
        - "COMMENT \U0001F4AC"
      summary: "paging comment by user id \U0001F194"
      description: this api used for paging comment by user id!
      operationId: pagingByProfileId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageCommentDTO"
  "/api/v1/comment/close/paging/by-like-count/{count}":
    get:
      tags:
        - "COMMENT \U0001F4AC"
      summary: "paging comment by like count \U0001F44D"
      description: this api used for paging comment by like count!
      operationId: pagingByLikeCount
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageCommentDTO"
  "/api/v1/comment/close/paging/by-dislike-count/{count}":
    get:
      tags:
        - "COMMENT \U0001F4AC"
      summary: "paging comment by dislike count \U0001F44E"
      description: this api used for paging comment by dislike count!
      operationId: pagingByDislikeCount
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageCommentDTO"
  "/api/v1/comment/close/paging/by-create-date/{date}":
    get:
      tags:
        - "COMMENT \U0001F4AC"
      summary: "paging comment by created date \U0001F4C5"
      description: this api used for paging comment by created date! ('2002-01-10')
      operationId: pagingByCreatedDate
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageCommentDTO"
  "/api/v1/comment/close/paging/by-content/{content}":
    get:
      tags:
        - "COMMENT \U0001F4AC"
      summary: "paging comment by content \U0001F4C3"
      description: this api used for paging comment by content!
      operationId: pagingByContent
      parameters:
        - name: content
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageCommentDTO"
  "/api/v1/comment/close/list/by-user/{id}":
    get:
      tags:
        - "COMMENT \U0001F4AC"
      summary: "get list comment by user id \U0001F194"
      description: this api used for get list comment by user id!
      operationId: getList
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CommentDTO"
  "/api/v1/channel/search/{id}":
    get:
      tags:
        - channel-controller
      operationId: search
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ChannelDTO"
  "/api/v1/channel/pagination":
    get:
      tags:
        - channel-controller
      operationId: pagination_2
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/channel/all":
    get:
      tags:
        - channel-controller
      operationId: all_1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/category/all":
    get:
      tags:
        - category-controller
      operationId: all_2
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CategoryDTO"
  "/api/v1/auth/verification/update-password/{jwt}/{email}/{password}":
    get:
      tags:
        - auth-controller
      operationId: updatePassword
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: password
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  "/api/v1/auth/verification/update-email/{jwt}/{oldEmail}/{newEmail}":
    get:
      tags:
        - auth-controller
      operationId: updateEmail_1
      parameters:
        - name: oldEmail
          in: path
          required: true
          schema:
            type: string
        - name: newEmail
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  "/api/v1/auth/verification/email/{jwt}":
    get:
      tags:
        - auth-controller
      operationId: registration_1
      parameters:
        - name: jwt
          in: path
          required: true
          schema:
            type: string
        - name: lang
          in: query
          required: false
          schema:
            type: string
            default: en
            enum:
              - en
              - ru
              - uz
      responses:
        '200':
          description: OK
  "/api/v1/attach/open/{id}/img":
    get:
      tags:
        - attach-controller
      operationId: openImageById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: byte
  "/api/v1/attach/open/{id}/general":
    get:
      tags:
        - attach-controller
      operationId: openByIdGeneral
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
                format: byte
  "/api/v1/attach/download/{id}":
    get:
      tags:
        - attach-controller
      operationId: download
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
                format: binary
  "/api/v1/attach/admin/pagination":
    get:
      tags:
        - attach-controller
      operationId: pagination_3
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/report/close/delete/{id}":
    delete:
      tags:
        - 'REPORT CONTROLLER #️⃣'
      summary: remove report ❌
      description: this api used for remove report
      operationId: remove
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/playlist-video/close/delete/{id}":
    delete:
      tags:
        - 'PLAYLIST-VIDEO CONTROLLER #️⃣'
      summary: "delete playlist-video ❌️\U0001F3A5"
      description: this api used for playlist-video delete
      operationId: delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: lang
          in: query
          required: false
          schema:
            type: string
            default: en
            enum:
              - en
              - ru
              - uz
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/playlist-video/close/delete-by-video/{id}":
    delete:
      tags:
        - 'PLAYLIST-VIDEO CONTROLLER #️⃣'
      summary: "delete video by id\U0001F194\U0001F3A5"
      description: this api used for delete video by id
      operationId: deleteByVideoId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: lang
          in: query
          required: false
          schema:
            type: string
            default: en
            enum:
              - en
              - ru
              - uz
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/playlist-video/close/delete-by-playlist/{id}":
    delete:
      tags:
        - 'PLAYLIST-VIDEO CONTROLLER #️⃣'
      summary: "delete playlist-video by id\U0001F194\U0001F3A5"
      description: this api used for delete playlist-video by id
      operationId: deleteByPlaylistId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: lang
          in: query
          required: false
          schema:
            type: string
            default: en
            enum:
              - en
              - ru
              - uz
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/comment/close/delete/{id}":
    delete:
      tags:
        - "COMMENT \U0001F4AC"
      summary: "create delete comment \U0001F4AC"
      description: this api used for creating delete comment!
      operationId: delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/attach/admin/delete/{id}":
    delete:
      tags:
        - attach-controller
      operationId: delete_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        status:
          type: boolean
        message:
          type: string
        data:
          type: object
    AttachEntity:
      type: object
      properties:
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
        id:
          type: string
        originalName:
          type: string
        size:
          type: integer
          format: int64
        path:
          type: string
        extension:
          type: string
        duration:
          type: string
    CategoryEntity:
      type: object
      properties:
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int32
        name:
          type: string
    ChannelEntity:
      type: object
      properties:
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
        id:
          type: string
        name:
          type: string
        photoId:
          type: string
        photo:
          "$ref": "#/components/schemas/AttachEntity"
        description:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - BLOCK
        bannerId:
          type: string
        banner:
          "$ref": "#/components/schemas/AttachEntity"
        profileId:
          type: integer
          format: int32
        profile:
          "$ref": "#/components/schemas/ProfileEntity"
    PreviewAttachEntity:
      type: object
      properties:
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
        id:
          type: string
        url:
          type: string
    ProfileEntity:
      type: object
      properties:
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int32
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        password:
          type: string
        photoUrl:
          type: string
        photoId:
          type: string
        photo:
          "$ref": "#/components/schemas/AttachEntity"
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - REGISTRATION
        role:
          type: string
          enum:
            - ROLE_USER
            - ROLE_ADMIN
            - ROLE_OWNER
        prtId:
          type: integer
          format: int32
        language:
          type: string
          enum:
            - en
            - ru
            - uz
    TagEntity:
      type: object
      properties:
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int32
        name:
          type: string
    VideoDTO:
      required:
        - attachId
        - categoryId
        - channelId
        - previewAttachId
        - title
        - videoStatus
        - videoType
      type: object
      properties:
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
        id:
          type: string
        previewAttachId:
          type: string
        previewAttach:
          "$ref": "#/components/schemas/AttachEntity"
        title:
          maxLength: 100
          minLength: 0
          type: string
        categoryId:
          type: integer
          format: int32
        categoryEntity:
          "$ref": "#/components/schemas/CategoryEntity"
        attachId:
          type: string
        attachEntity:
          "$ref": "#/components/schemas/AttachEntity"
        channelId:
          type: string
        channelEntity:
          "$ref": "#/components/schemas/ChannelEntity"
        videoTagEntityList:
          type: array
          items:
            "$ref": "#/components/schemas/VideoTagEntity"
        videoType:
          type: string
          enum:
            - VIDEO
            - SHORT
        videoStatus:
          type: string
          enum:
            - PUBLIC
            - PRIVATE
        videoKind:
          type: string
          enum:
            - CREATED
            - PUBLISHED
            - BLOCK
        description:
          type: string
        prtId:
          type: integer
          format: int32
        publishedDate:
          type: string
          format: date-time
        viewCount:
          type: integer
          format: int64
        sharedCount:
          type: integer
          format: int64
        likeCount:
          type: integer
          format: int64
        dislikeCount:
          type: integer
          format: int64
    VideoEntity:
      type: object
      properties:
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
        id:
          type: string
        previewAttachId:
          type: string
        previewAttachEntity:
          "$ref": "#/components/schemas/PreviewAttachEntity"
        title:
          type: string
        categoryId:
          type: integer
          format: int32
        categoryEntity:
          "$ref": "#/components/schemas/CategoryEntity"
        attachId:
          type: string
        attachEntity:
          "$ref": "#/components/schemas/AttachEntity"
        channelId:
          type: string
        channelEntity:
          "$ref": "#/components/schemas/ChannelEntity"
        videoTagEntityList:
          type: array
          items:
            "$ref": "#/components/schemas/VideoTagEntity"
        videoType:
          type: string
          enum:
            - VIDEO
            - SHORT
        videoStatus:
          type: string
          enum:
            - PUBLIC
            - PRIVATE
        description:
          type: string
        prtId:
          type: integer
          format: int32
        publishedDate:
          type: string
          format: date-time
        videoKind:
          type: string
          enum:
            - CREATED
            - PUBLISHED
            - BLOCK
        viewCount:
          type: integer
          format: int64
        sharedCount:
          type: integer
          format: int64
        likeCount:
          type: integer
          format: int64
        dislikeCount:
          type: integer
          format: int64
    VideoTagEntity:
      type: object
      properties:
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
        id:
          type: string
        videoId:
          type: string
        video:
          "$ref": "#/components/schemas/VideoEntity"
        tagId:
          type: integer
          format: int32
        tagEntity:
          "$ref": "#/components/schemas/TagEntity"
    TagDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
    AttachDTO:
      type: object
      properties:
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
        id:
          type: string
        originalName:
          type: string
        path:
          type: string
        size:
          type: integer
          format: int64
        extension:
          type: string
        createdData:
          type: string
          format: date-time
        url:
          type: string
    ProfileDTO:
      required:
        - email
        - name
        - password
        - role
        - status
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 2147483647
          minLength: 3
          type: string
        surname:
          type: string
        email:
          type: string
        password:
          maxLength: 2147483647
          minLength: 8
          type: string
        photo:
          "$ref": "#/components/schemas/AttachDTO"
        photoUrl:
          type: string
        role:
          type: string
          enum:
            - ROLE_USER
            - ROLE_ADMIN
            - ROLE_OWNER
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - REGISTRATION
        createdDate:
          type: string
          format: date-time
        jwt:
          type: string
    PlaylistDTO:
      type: object
      properties:
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - PRIVATE
            - PUBLIC
        orderNum:
          type: integer
          format: int32
        channelId:
          type: string
        prtId:
          type: integer
          format: int32
    PlaylistEntity:
      type: object
      properties:
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - PRIVATE
            - PUBLIC
        orderNum:
          type: integer
          format: int32
        prtId:
          type: integer
          format: int32
        channelId:
          type: string
        channelEntity:
          "$ref": "#/components/schemas/ChannelEntity"
    PlaylistVideoDTO:
      required:
        - orderNum
        - playlistId
        - videoId
      type: object
      properties:
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int32
        playlistId:
          type: integer
          format: int32
        playlistEntity:
          "$ref": "#/components/schemas/PlaylistEntity"
        videoId:
          type: string
        videoEntity:
          "$ref": "#/components/schemas/VideoEntity"
        orderNum:
          type: integer
          format: int32
        prtId:
          type: integer
          format: int32
    ChannelDTO:
      required:
        - bannerId
        - description
        - name
        - photoId
        - status
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - BLOCK
        photoId:
          type: string
        bannerId:
          type: string
    CategoryDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
    SubscriptionDTO:
      required:
        - channelId
        - notificationType
        - profileId
        - status
      type: object
      properties:
        id:
          type: string
        profileId:
          type: integer
          format: int32
        channelId:
          type: string
        createdDate:
          type: string
          format: date-time
        unsubscribeDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - ACTIVE
            - BLOCK
        notificationType:
          type: string
          enum:
            - ALL
            - PERSONALIZED
            - NON
    ReportDTO:
      required:
        - channelId
        - content
        - videoId
        - videoType
      type: object
      properties:
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
        id:
          type: string
        prtId:
          type: integer
          format: int32
        content:
          type: string
        channelId:
          type: string
        videoId:
          type: string
        videoType:
          type: string
          enum:
            - VIDEO
            - SHORT
    EmailHistoryFilterDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        toEmail:
          type: string
        title:
          type: string
        message:
          type: string
        createdDateFrom:
          type: string
          format: date-time
        createdDateTo:
          type: string
          format: date-time
    EmailHistoryDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        toEmail:
          type: string
        title:
          type: string
        message:
          type: string
        createdDate:
          type: string
          format: date-time
    PageImplEmailHistoryDTO:
      type: object
      properties:
        content:
          type: array
          items:
            "$ref": "#/components/schemas/EmailHistoryDTO"
        pageable:
          "$ref": "#/components/schemas/PageableObject"
        last:
          type: boolean
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          "$ref": "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          "$ref": "#/components/schemas/SortObject"
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
        paged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    CommentDTO:
      required:
        - content
        - videoId
      type: object
      properties:
        visible:
          type: boolean
        createdDate:
          type: string
          format: date-time
        id:
          type: string
        profileId:
          type: integer
          format: int32
        profileEntity:
          "$ref": "#/components/schemas/ProfileEntity"
        videoId:
          type: string
        videoEntity:
          "$ref": "#/components/schemas/VideoEntity"
        content:
          type: string
        replyId:
          type: string
        likeCount:
          type: integer
          format: int64
        dislikeCount:
          type: integer
          format: int64
    RegistrationDTO:
      required:
        - name
        - password
        - photoId
        - role
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        password:
          maxLength: 2147483647
          minLength: 8
          type: string
        photoId:
          type: string
        role:
          type: string
          enum:
            - ROLE_USER
            - ROLE_ADMIN
            - ROLE_OWNER
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - REGISTRATION
    AuthDTO:
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    PageVideoShortInfoMapper:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            "$ref": "#/components/schemas/VideoShortInfoMapper"
        number:
          type: integer
          format: int32
        sort:
          "$ref": "#/components/schemas/SortObject"
        pageable:
          "$ref": "#/components/schemas/PageableObject"
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    VideoShortInfoMapper:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        title:
          type: string
        createdDate:
          type: string
          format: date-time
        surname:
          type: string
        channelId:
          type: string
        prtId:
          type: integer
          format: int32
        videoType:
          type: string
          enum:
            - VIDEO
            - SHORT
        attachId:
          type: string
        videoStatus:
          type: string
          enum:
            - PUBLIC
            - PRIVATE
        category:
          type: integer
          format: int32
        description:
          type: string
    PageVideoPlayListInfoMapper:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            "$ref": "#/components/schemas/VideoPlayListInfoMapper"
        number:
          type: integer
          format: int32
        sort:
          "$ref": "#/components/schemas/SortObject"
        pageable:
          "$ref": "#/components/schemas/PageableObject"
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    VideoPlayListInfoMapper:
      type: object
      properties:
        id:
          type: string
        duration:
          type: string
        title:
          type: string
        previewAttachId:
          type: string
        publishedDate:
          type: string
          format: date-time
        viewCount:
          type: integer
          format: int64
        previewAttachUrl:
          type: string
    PageVideoFullInfoMapper:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            "$ref": "#/components/schemas/VideoFullInfoMapper"
        number:
          type: integer
          format: int32
        sort:
          "$ref": "#/components/schemas/SortObject"
        pageable:
          "$ref": "#/components/schemas/PageableObject"
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    VideoFullInfoMapper:
      type: object
      properties:
        id:
          type: string
        duration:
          type: string
        title:
          type: string
        dislikeCount:
          type: integer
          format: int64
        likeCount:
          type: integer
          format: int64
        channelId:
          type: string
        categoryId:
          type: integer
          format: int32
        previewAttachId:
          type: string
        attachId:
          type: string
        sharedCount:
          type: integer
          format: int64
        publishedDate:
          type: string
          format: date-time
        viewCount:
          type: integer
          format: int64
        attachUrl:
          type: string
        channelPhotoUrl:
          type: string
        tagList:
          type: array
          items:
            "$ref": "#/components/schemas/TagDTO"
        attachDuration:
          type: string
        channelName:
          type: string
        categoryName:
          type: string
        previewAttachUrl:
          type: string
        description:
          type: string
    PageVideoDTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            "$ref": "#/components/schemas/VideoDTO"
        number:
          type: integer
          format: int32
        sort:
          "$ref": "#/components/schemas/SortObject"
        pageable:
          "$ref": "#/components/schemas/PageableObject"
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageReportDTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            "$ref": "#/components/schemas/ReportDTO"
        number:
          type: integer
          format: int32
        sort:
          "$ref": "#/components/schemas/SortObject"
        pageable:
          "$ref": "#/components/schemas/PageableObject"
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    ChannelInfo:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
    PlaylistVideoInfoMapper:
      type: object
      properties:
        createdDate:
          type: string
          format: date-time
        orderNum:
          type: integer
          format: int32
        playlistId:
          type: string
        video:
          "$ref": "#/components/schemas/VideoInfo"
    PreviewAttachInfo:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
    VideoInfo:
      type: object
      properties:
        id:
          type: string
        channel:
          "$ref": "#/components/schemas/ChannelInfo"
        duration:
          type: string
        title:
          type: string
        previewAttach:
          "$ref": "#/components/schemas/PreviewAttachInfo"
    PageCommentDTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            "$ref": "#/components/schemas/CommentDTO"
        number:
          type: integer
          format: int32
        sort:
          "$ref": "#/components/schemas/SortObject"
        pageable:
          "$ref": "#/components/schemas/PageableObject"
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
  securitySchemes:
    Bearer Authentication:
      type: http
      scheme: bearer
      bearerFormat: JWT
